version: '3.8'

services:
    db:
        image: mysql:9.0
        env_file:
            - ./.env
        volumes:
            - db_data:/var/lib/mysql
        networks:
            - app-net
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
            interval: 30s
            timeout: 10s
            retries: 5
            start_period: 10s

    spring-backend:
        build:
            context: ./spring-backend
            dockerfile: Dockerfile
        env_file:
            - ./.env
        environment:
            - DB_HOST=db
        depends_on:
            db:
              condition: service_healthy
        networks:
            - app-net
        healthcheck:
            test: ["CMD", "nc", "-z", "localhost", "8080"]
            interval: 30s
            timeout: 10s
            retries: 5
            start_period: 15s

    react-frontend:
        build:
            context: ./react-frontend
            dockerfile: Dockerfile
        env_file:
            - ./react-frontend/.env
        depends_on:
            spring-backend:
                condition: service_healthy
        networks:
            - app-net
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:3000/"]
            interval: 30s
            timeout: 10s
            retries: 5
            start_period: 20s

    nginx-proxy:
        image: nginx:stable-alpine
        env_file:
            - ./.env
        ports:
            - "80:80"
        volumes:
            - ./nginx-proxy/conf.d:/etc/nginx/conf.d:ro
        depends_on:
          spring-backend:
            condition: service_healthy
          react-frontend:
            condition: service_healthy
        networks:
            - app-net
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:80/"]
            interval: 30s
            timeout: 10s
            retries: 5
            start_period: 25s

volumes:
    db_data:

networks:
    app-net:
        driver: bridge
